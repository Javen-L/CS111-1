CS 111 P0: Warm-up

NAME: Brandon Oestereicher
EMAIL: brandon.oestereicher@gmail.com
ID: 604825250

The following files are inlcuded in the submission file lab0-604825250.tar.gz

lab0.c

A program that copies its standard output to its stardard output.
If it runs without errors, it exits with return code 0.
It can take the four following command line arguments, in any
combination or order.

--input=filename 
allows the specified file to be used as standard input.

--output=filename
creates the specified file if it does not already exist, and
allows it to be used as standard output

--segfault
forces a segmentation fault, without copying anything from stdin to stdout

--catch
uses signal to register a handler that catches a segmentation fault


Makefile

By default, it will build the lab0 executable with -Wall and -Wextra
make check will run the script smoketest.sh, in which I wrote a 
few simple tests of the program (described below)
make clean deletes all files that the Makefile creates
make dist builds the distribution tarball


smoketest.sh

The first test checks if program runs successfully under normal conditions
by running it with an input and output file
The second test checks if input is correctly copied to output by comparing the files
The third test checks if the catch option can catch segfaults by running the program
with the --segfault and --catch options and checking the exit code
The fourth test checks if the correct error is thrown when there is failure to write to a file
The final test checks if the correct error is thrown when there is failure to read from a file


backtrace.png

This is a screenshot of the backtrace I ran when I caused a segmentation fault,
running the program under gdb


breakpoint.png

This is a screenshot of the null pointer that I access in order to cause the segmentation fault


input.txt

This is a file with sample input that is used for testing the program.